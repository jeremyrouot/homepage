
# This file was *autogenerated* from the file exo2.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_4 = Integer(4); _sage_const_200 = Integer(200); _sage_const_140 = Integer(140); _sage_const_150 = Integer(150)
from sage import *

reset()

import numpy as np
import pylab as plt

def gx(x):
  return sin(_sage_const_2 *math.pi/L*x);

############################# ok ########################################
#implicite, retarde en temps, avance en espace
L=_sage_const_3 ;
N=_sage_const_150 ;
c=_sage_const_1 ;
lbd=_sage_const_3 
T=_sage_const_2 
dx=L/(N+_sage_const_1 );
dt=lbd*dx/c;
nx=[i*dx for i in range(_sage_const_1 ,N+_sage_const_2 )]
yn=np.array(map(gx,nx))
n = _sage_const_0 ;
A = (_sage_const_1 -lbd)*np.diag(np.ones(N+_sage_const_1 )) + lbd*np.diag(np.ones(N),k=_sage_const_1 );
A[-_sage_const_1 ,_sage_const_0 ] = lbd
print(A)
while n*dt<=T:
  yn = (np.linalg.inv(A)).dot(yn)
  n+=_sage_const_1 ;
print(max(yn))
  

######################################################################
#explicite, avance en temps, centre en espace
L=_sage_const_4 
N=_sage_const_200 ;
c=_sage_const_2 ;
lbd=_sage_const_1 ;
T=_sage_const_3 
dx=L/(N+_sage_const_1 );
dt=lbd*dx/c;
nx=[i*dx for i in range(_sage_const_1 ,N+_sage_const_2 )]
yn=np.array(map(gx,nx))
n = _sage_const_0 ;
A = np.diag(np.ones(N+_sage_const_1 ))+lbd/_sage_const_2 *np.diag(np.ones(N),k=-_sage_const_1 )-lbd/_sage_const_2 *np.diag(np.ones(N),k=_sage_const_1 );
A[_sage_const_0 ,-_sage_const_1 ] = -lbd/_sage_const_2 
A[-_sage_const_1 ,_sage_const_0 ] = lbd/_sage_const_2 
print(A)
while n*dt<=T:
  yn = A.dot(yn)
  n+=_sage_const_1 ;
print(max(yn))

######################### ok ###########################################
#implicite, retarde en temps, centre en espace
L=_sage_const_4 ;
N=_sage_const_140 ;
c=_sage_const_4 ;
lbd=_sage_const_3 ;
T=_sage_const_2 
dx=L/(N+_sage_const_1 );
dt=lbd*dx/c;
nx=[i*dx for i in range(_sage_const_1 ,N+_sage_const_2 )]
yn=np.array(map(gx,nx))
n = _sage_const_0 ;
A = np.diag(np.ones(N+_sage_const_1 ))-lbd/_sage_const_2 *np.diag(np.ones(N),k=-_sage_const_1 )+lbd/_sage_const_2 *np.diag(np.ones(N),k=_sage_const_1 );
A[_sage_const_0 ,-_sage_const_1 ] = -lbd/_sage_const_2 
A[-_sage_const_1 ,_sage_const_0 ] = lbd/_sage_const_2 
print(A)
while n*dt<=T:
  yn = (np.linalg.inv(A)).dot(yn)
  n+=_sage_const_1 ;
print(max(yn))

############################## ok  #####################################
#explicite, avance en temps,avance en espace
L=_sage_const_4 ;
N=_sage_const_150 ;
c=_sage_const_1 ;
lbd=_sage_const_1 /_sage_const_4 ;
T=_sage_const_2 
dx=L/(N+_sage_const_1 );
dt=lbd*dx/c;
nx=[i*dx for i in range(_sage_const_1 ,N+_sage_const_2 )]
yn=np.array(map(gx,nx))
n = _sage_const_0 ;
A = (_sage_const_1 +lbd)*np.diag(np.ones(N+_sage_const_1 )) - lbd*np.diag(np.ones(N),k=_sage_const_1 );
A[-_sage_const_1 ,_sage_const_0 ] = -lbd
print(A)
while n*dt<=T:
  yn = A.dot(yn)
  n+=_sage_const_1 ;
print(max(yn))


########################### ok #########################################
#explicite, avance en temps, retarde en espace
L=_sage_const_1 ;
N=_sage_const_200 ;
c=_sage_const_2 ;
lbd=_sage_const_1 /_sage_const_3 ;
T=_sage_const_1 
dx=L/(N+_sage_const_1 );
dt=lbd*dx/c;
nx=[i*dx for i in range(_sage_const_1 ,N+_sage_const_2 )]
yn=np.array(map(gx,nx))
n = _sage_const_0 ;
A = (_sage_const_1 -lbd)*np.diag(np.ones(N+_sage_const_1 )) + lbd*np.diag(np.ones(N),k=-_sage_const_1 );
A[_sage_const_0 ,-_sage_const_1 ] = lbd
print(A)
while n*dt<=T:
  yn = A.dot(yn)
  n+=_sage_const_1 ;
print(max(yn))




############################# ok ########################################
#implicite, retarde en temps, retarde en espace
L=_sage_const_4 ;
N=_sage_const_200 ;
c=_sage_const_4 ;
lbd=_sage_const_1 /_sage_const_2 
T=_sage_const_3 
dx=L/(N+_sage_const_1 );
dt=lbd*dx/c;
nx=[i*dx for i in range(_sage_const_1 ,N+_sage_const_2 )]
yn=np.array(map(gx,nx))
n = _sage_const_0 ;
A = (_sage_const_1 +lbd)*np.diag(np.ones(N+_sage_const_1 )) - lbd*np.diag(np.ones(N),k=-_sage_const_1 );
A[_sage_const_0 ,-_sage_const_1 ] = -lbd
print(A)
while n*dt<=T:
  yn = (np.linalg.inv(A)).dot(yn)
  n+=_sage_const_1 ;
print(max(yn))




